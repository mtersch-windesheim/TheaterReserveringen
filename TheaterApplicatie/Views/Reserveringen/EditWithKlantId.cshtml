@model IEnumerable<Reservering>
@{ 
    string rijen = "ABCDE";
    int aantalStoelen = 6;
}
<span>@ViewData["klantgegevens"]</span>
    <form method="post">
        <input type="hidden" name="klantId" value="@ViewData["klantId"]" />
        <table>
            @* Even de logica omgekeerd: loop over rijen en stoelen, en zoek de bijbehorende reservering in de lijst *@
            @foreach (char rij in rijen)
            {
            <tr>
                @for (int stoel = 1; stoel <= aantalStoelen; stoel++)
                {
                    <td>
                        @{
                            Reservering reservering = Model.FirstOrDefault(res => res.Naam.Equals($"{rij}{stoel}"));
                            string bgcolor;
                            if (!reservering.Bezet)
                                bgcolor = "green";
                            else if (reservering.KlantId == (int)(ViewData["klantId"]))
                                bgcolor = "blue";
                            else
                                bgcolor = "red";
                            bool disabled = reservering.Bezet && !(reservering.KlantId.ToString() == ViewData["klantId"].ToString());   // Dubbelcheck: ToString() nodig?
                        }
                        <input type="checkbox" name="reserveringIds" value="@reservering.ReserveringId"
                               @if (reservering.Bezet) { @Html.Raw(" checked= \"checked\"") ; }
                               @if (disabled) { @Html.Raw(" disabled") ; } />
                        <br />
                        <div style="background-color: @bgcolor; color: white; width: 6em">
                            @reservering.Naam
                        </div>
                    </td>
                }
            </tr>
            }
        </table>
        <input type="submit" value="Reserveren" />
    </form>